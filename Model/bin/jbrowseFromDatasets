#!/usr/bin/perl

use strict;

my $CONF_FILE_BASENAME = "tracks.conf";
my $CONF_FILE_BASENAME_AA = "tracks_aa.conf";

my $ALLPROPS_FILE_BASENAME = "datasetAndPresenterProps.conf";

my $PROP_FILE_PATH = "$ENV{GUS_HOME}/lib/prop/datasetProperties/*.prop";

my $TRACKS_CONF_FOR_INJECTION = "$ENV{PROJECT_HOME}/ApiCommonModel/Model/lib/jbrowse/$CONF_FILE_BASENAME";
my $TRACKS_CONF_FOR_INJECTION_AA = "$ENV{PROJECT_HOME}/ApiCommonModel/Model/lib/jbrowse/$CONF_FILE_BASENAME_AA";

my $ALLPROPS_CONF_FOR_INJECTION = "$ENV{PROJECT_HOME}/ApiCommonModel/Model/lib/jbrowse/$ALLPROPS_FILE_BASENAME";


my $CUSTOM_TRACKS_BASE_DIRECTORY = "$ENV{PROJECT_HOME}/ApiCommonModel/Model/lib/jbrowse";
my $GENERATED_TRACKS_BASE_DIRECTORY = "$ENV{PROJECT_HOME}/ApiCommonModel/Model/lib/jbrowse/auto_generated";

my $GUS_HOME_BASE = "$ENV{GUS_HOME}/lib/jbrowse/auto_generated";

my @files = glob $PROP_FILE_PATH;

foreach my $file (@files) {
  open(FILE, $file) or die "Cannot open file $file for reading: $!";
  while (my $line = <FILE>) {
    chomp;
    if ($line =~ /organismAbbrev=(.+)$/) {

      my $organismAbbrev = $1;

      my $orgCustomTracksConf = "$CUSTOM_TRACKS_BASE_DIRECTORY/$organismAbbrev/$CONF_FILE_BASENAME";
      my $orgCustomTracksConfAa = "$CUSTOM_TRACKS_BASE_DIRECTORY/$organismAbbrev/$CONF_FILE_BASENAME_AA";
      my $orgCustomAllPropsConf = "$CUSTOM_TRACKS_BASE_DIRECTORY/$organismAbbrev/$ALLPROPS_FILE_BASENAME";

      my $orgGeneratedTracksDir = "$GENERATED_TRACKS_BASE_DIRECTORY/$organismAbbrev/aa";

      my $orgGeneratedTracksConf = "$GENERATED_TRACKS_BASE_DIRECTORY/$organismAbbrev/$CONF_FILE_BASENAME";
      my $orgGeneratedTracksConfAa = "$GENERATED_TRACKS_BASE_DIRECTORY/$organismAbbrev/aa/$CONF_FILE_BASENAME";
      my $orgGeneratedAllPropsConf = "$GENERATED_TRACKS_BASE_DIRECTORY/$organismAbbrev/$ALLPROPS_FILE_BASENAME";

      my $orgGusHomeDirectoryAA = "$GUS_HOME_BASE/$organismAbbrev/aa";
      my $orgGusHomeDirectory = "$GUS_HOME_BASE/$organismAbbrev";

      unless(-d $orgGusHomeDirectoryAA) {
        system("mkdir -p  $orgGusHomeDirectoryAA") == 0 or die "mkdir failed for directory $orgGusHomeDirectoryAA: $?";
      }

      system("chmod guo+rw  $orgGusHomeDirectoryAA") == 0 or die "chmod failed for directory $orgGusHomeDirectoryAA: $?";
      system("chmod guo+rw $orgGusHomeDirectory") == 0 or die "chmod failed for directory $orgGusHomeDirectory: $?";


      unless(-d $orgGeneratedTracksDir) {
        system("mkdir -p $orgGeneratedTracksDir") == 0 or die "mkdir failed for directory $orgGeneratedTracksDir: $?";
      }

      # generated track file doesn't exist OR INJECTED TRACKS IS NEWER  OR custom file exists and is newer
      if(! -e $orgGeneratedTracksConf || 
         (stat $TRACKS_CONF_FOR_INJECTION)[9] > (stat $orgGeneratedTracksConf)[9] || 
         (-e $orgCustomTracksConf && (stat $orgCustomTracksConf)[9] > (stat $orgGeneratedTracksConf)[9])) {

        system("cp $TRACKS_CONF_FOR_INJECTION $orgGeneratedTracksConf") == 0 or die "cp failed: $?";

        if(-e $orgCustomTracksConf) {
          system("cat $orgCustomTracksConf >> $orgGeneratedTracksConf") == 0 or die "cat failed: $?";
        }
      }

      # generated prop file doesn't exist OR INJECTED props IS NEWER  OR custom file exists and is newer
      if(! -e $orgGeneratedAllPropsConf || 
         (stat $ALLPROPS_CONF_FOR_INJECTION)[9] > (stat $orgGeneratedAllPropsConf)[9] || 
         (-e $orgCustomAllPropsConf && (stat $orgCustomAllPropsConf)[9] > (stat $orgGeneratedAllPropsConf)[9])) {

        system("cp $ALLPROPS_CONF_FOR_INJECTION $orgGeneratedAllPropsConf") == 0 or die "cp failed: $?";

        if(-e $orgCustomAllPropsConf) {
          system("cat $orgCustomAllPropsConf >> $orgGeneratedAllPropsConf") == 0 or die "cat failed: $?";
        }
      }

      # generated track file doesn't exist OR INJECTED TRACKS IS NEWER  OR custom file exists and is newer
      if(! -e $orgGeneratedTracksConfAa || 
         (stat $TRACKS_CONF_FOR_INJECTION_AA)[9] > (stat $orgGeneratedTracksConfAa)[9] || 
         (-e $orgCustomTracksConfAa && (stat $orgCustomTracksConfAa)[9] > (stat $orgGeneratedTracksConfAa)[9])) {

        system("cp $TRACKS_CONF_FOR_INJECTION_AA $orgGeneratedTracksConfAa") == 0 or die "cp failed: $?";

        if(-e $orgCustomTracksConfAa) {
          system("cat $orgCustomTracksConfAa >> $orgGeneratedTracksConfAa") == 0 or die "cat failed: $?";
        }
      }

    }
  }
}

